$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  config:
    shared_preload_libraries: */env/OMNI_SO
    max_worker_processes: 64
  init:
  - set session omni_httpd.init_port = 0
  - create extension omni_httpd cascade
  - create extension omni_httpc cascade
  # FIXME: waiting for two reloads is working around a startup bug in omni_httpd
  - call omni_httpd.wait_for_configuration_reloads(2)
  - |
    update omni_httpd.handlers set query = $$
      select omni_httpd.http_response(json_build_object(
      'method', request.method,
      'path', request.path,
      'qs', request.query_string,
      'headers', (select
                          json_agg(json_build_object(h.name, h.value))
                          from
                              unnest(request.headers) h
                          where h.name not in ('user-agent','omnigres-connecting-ip')
                          ),
      'body', convert_from(request.body, 'utf-8')
      )) from request
    $$

tests:

- name: NULL request
  query: select *
         from
             omni_httpc.http_execute(null)
  results: [ ]

- name: NULL url
  query: select *
         from
             omni_httpc.http_execute(omni_httpc.http_request(null))
  error: URL can't be NULL

- name: default GET request
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1')))
    select
      response.status,
      response.message,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8')::json as body
      from response
  results:
  - status: 200
    message: OK
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=1
      headers: null
      body: ""

- name: HEAD request
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1', method => 'HEAD')))
    select
      response.status,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8') as body
      from response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body: ''

- name: POST request
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1', method => 'POST')))
    select
      response.status,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8')::json as body
      from response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: POST
      path: /test
      qs: q=1
      headers: null
      body: ""

- name: request headers
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1', headers => 
    array[omni_http.http_header('x-test', '1')])))
    select
      response.status,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8')::json as body
      from response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=1
      headers:
      - x-test: 1
      body: ""

- name: null header name
  query: |
    with
        response as (select *
                     from
                         omni_httpc.http_execute(
                                 omni_httpc.http_request('http://127.0.0.1:' ||
                                                         (select effective_port from omni_httpd.listeners) ||
                                                         '/test?q=1', headers =>
                                                             array [omni_http.http_header(null, null)])))
    select
        response.status,
        (select
             json_agg(json_build_object(h.name, h.value))
         from
             unnest(response.headers) h
         where
             h.name not in ('server', 'content-length', 'connection')) as headers,
        convert_from(response.body, 'utf-8')::json as body
    from
        response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=1
      headers: null
      body: ""

- name: null header value
  query: |
    with
        response as (select *
                     from
                         omni_httpc.http_execute(
                                 omni_httpc.http_request('http://127.0.0.1:' ||
                                                         (select effective_port from omni_httpd.listeners) ||
                                                         '/test?q=1', headers =>
                                                             array [omni_http.http_header('x-test', null)])))
    select
        response.status,
        (select
             json_agg(json_build_object(h.name, h.value))
         from
             unnest(response.headers) h
         where
             h.name not in ('server', 'content-length', 'connection')) as headers,
        convert_from(response.body, 'utf-8')::json as body
    from
        response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=1
      headers:
      - x-test:
      body: ""

- name: sending body
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1', 
                                    body => 'test', method => 'POST')))
    select
      response.status,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8')::json as body
      from response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: POST
      path: /test
      qs: q=1
      headers: null
      body: test

- name: executing multiple requests
  query: |
    with response as (select * from omni_httpc.http_execute(
           omni_httpc.http_request('http://127.0.0.1:' || (select effective_port from omni_httpd.listeners) || '/test?q=1'),
           omni_httpc.http_request('http://127.0.0.1:' || (select effective_port from omni_httpd.listeners) || '/test?q=2')
    ))
    select
      response.status,
      (select
           json_agg(json_build_object(h.name, h.value))
       from
           unnest(response.headers) h
       where
           h.name not in ('server', 'content-length', 'connection')) as headers,
      convert_from(response.body, 'utf-8')::json as body
      from response
  results:
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=1
      headers: null
      body: ""
  - status: 200
    headers:
    - content-type: application/json
    body:
      method: GET
      path: /test
      qs: q=2
      headers: null
      body: ""

- name: protocol selector (H1)
  query: |
    with response as (select * from omni_httpc.http_execute_with_options(
           omni_httpc.http_execute_options(http2_ratio => 0), 
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1')))
    select
      response.version >> 8 as http_version
      from response
  results:
  - http_version: 1

- name: protocol selector (H2)
  query: |
    with response as (select * from omni_httpc.http_execute_with_options(
           omni_httpc.http_execute_options(force_cleartext_http2 => true, http2_ratio => 100), 
           omni_httpc.http_request('http://127.0.0.1:' ||
                                   (select effective_port from omni_httpd.listeners) || '/test?q=1')))
    select
      response.version >> 8 as http_version
      from response
  results:
  - http_version: 2

- name: protocol selector (H3)
  todo: pending working H3 support in omni_httpd
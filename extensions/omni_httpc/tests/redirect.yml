$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  config:
    shared_preload_libraries: */env/OMNI_SO
    max_worker_processes: 64
  init:
    - set session omni_httpd.init_port = 0
    - create extension omni_httpd cascade
    - create extension omni_httpc cascade
    - call omni_httpd.wait_for_configuration_reloads(2)
    - |
      update omni_httpd.handlers
      set query = $$
        select omni_httpd.http_response(json_build_object(
        'method', request.method,
        'path', request.path,
        'qs', request.query_string,
        'headers', (select
                            json_agg(json_build_object(h.name, h.value))
                            from
                                unnest(request.headers) h
                            where h.name not in ('user-agent','omnigres-connecting-ip')
                            ),
        'body', convert_from(request.body, 'utf-8')
        ), 
        headers =>
          case
                  when
                      request.query_string LIKE '%q=absolute_url%'
                  then
                      ARRAY[omni_http.http_header(
                          'Location',
                          'http://127.0.0.1:' || (select effective_port from omni_httpd.listeners) || '/test?q=destination')]
                  when
                      request.query_string LIKE '%q=relative_url_absolute_path%'
                  then
                      ARRAY[omni_http.http_header(
                          'Location',
                          '/test?q=destination')]
      
                  when
                      request.query_string LIKE '%q=relative_url_relative_path%'
                  then
                      ARRAY[omni_http.http_header(
                          'Location',
                          'path1/path2?q=destination')]
                    
                  when
                      request.query_string LIKE '%counter=%'
                  then
                      ARRAY[
                          omni_http.http_header(
                              'Location', '/test?status=302&counter=' || (
                                      (regexp_match(request.query_string, 'counter=([^&]+)'))::int[]
                                  )[1]+ 1
                          )
                      ]
                  else NULL
          end,
        status => case
          when 
              request.query_string LIKE '%status=%'
              OR request.query_string LIKE 'counter=%'
          then (
              ((regexp_match(
                  request.query_string,
                  'status=([^&]+)'
              ))::int[])[1]::int
          )
              
          else 200
          end
        ) from request
      $$

tests:
  - name: redirect should not be followed if follow_redirects is false
    query: |
      with response as (select * from omni_httpc.http_execute_with_options(
             omni_httpc.http_execute_options(follow_redirects => false),
             omni_httpc.http_request(
              'http://127.0.0.1:' || 
              (select effective_port from omni_httpd.listeners) ||
              '/test?q=absolute_url&status=302')
              )
      )
      select
        response.status,
        (select
             h.value ~ 'http://127.0.0.1:[0-9]+/test\?q=destination'
         from
             unnest(response.headers) h
         where
             h.name = 'location') as location_matches,
        convert_from(response.body, 'utf-8')::json as body
        from response
    results:
    - status: 302
      location_matches: true
      body:
        method: GET
        qs: q=absolute_url&status=302
        path: /test
        headers: null
        body: ""

  - name: redirect should be followed if follow_redirects is true for an absolute URL
    query: |
      with response as (select * from omni_httpc.http_execute_with_options(
          omni_httpc.http_execute_options(follow_redirects => true),
          omni_httpc.http_request(
              'http://127.0.0.1:' || 
              (select effective_port from omni_httpd.listeners) || 
              '/test?q=absolute_url&status=302'
          )
      ))
      select
          response.status,
          (select
               json_agg(json_build_object(h.name, h.value))
           from
               unnest(response.headers) h
           where
               h.name not in ('server', 'content-length', 'connection')) as headers,
          convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 200
        headers:
          - content-type: application/json
        body:
          method: GET
          path: /test
          qs: q=destination
          headers: null
          body: ""

  - name: redirect should be followed if follow_redirects is true for a relative URL and absolute path
    query: |
      with response as (select * from omni_httpc.http_execute_with_options(
              omni_httpc.http_execute_options(follow_redirects => true),
              omni_httpc.http_request(
                  'http://127.0.0.1:' ||
                  (select effective_port from omni_httpd.listeners) ||
                  '/test?q=relative_url_absolute_path&status=302')
              )
      )
      select
          response.status,
          (select
               json_agg(json_build_object(h.name, h.value))
           from
               unnest(response.headers) h
           where
               h.name not in ('server', 'content-length', 'connection')) as headers,
          convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 200
        headers:
          - content-type: application/json
        body:
          method: GET
          qs: q=destination
          path: /test
          headers: null
          body: ""

  - name: redirect should be followed if follow_redirects is true for a relative URL and relative path
    query: |
      with response as (select * from omni_httpc.http_execute_with_options(
              omni_httpc.http_execute_options(follow_redirects => true),
              omni_httpc.http_request(
                  'http://127.0.0.1:' || 
                  (select effective_port from omni_httpd.listeners) || 
                  '/test?q=relative_url_relative_path&status=302'))
      )
      select
          response.status,
          (select
               json_agg(json_build_object(h.name, h.value))
           from
               unnest(response.headers) h
           where
               h.name not in ('server', 'content-length', 'connection')) as headers,
          convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 200
        headers:
          - content-type: application/json
        body:
          method: GET
          qs: q=destination
          path: /path1/path2
          headers: null
          body: ""

  - name: up to 5 redirects should be followed if follow_redirects is true
    query: |
      with response as (select *
          from omni_httpc.http_execute_with_options(
                omni_httpc.http_execute_options(follow_redirects => true),
                omni_httpc.http_request(
                    'http://127.0.0.1:' || 
                    (select effective_port from omni_httpd.listeners) ||
                    '/test?counter=1&status=302'
                )
          )
      )
      select response.status,
             (select json_agg(json_build_object(h.name, h.value))
              from
                  unnest(response.headers) h
              where
                  h.name not in ('server', 'content-length', 'connection')) as headers,
             convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 302
        headers:
          - location: /test?status=302&counter=7
          - content-type: application/json
        body:
          method: GET
          path: /test
          qs: status=302&counter=6
          headers: null
          body: ""

  - name: 307/308 redirects should be redirected with the same method and body
    query: |
      with response as (select *
                        from omni_httpc.http_execute_with_options(
                                omni_httpc.http_execute_options(follow_redirects => true),
                                omni_httpc.http_request(
                                        'http://127.0.0.1:' ||
                                        (select effective_port from omni_httpd.listeners) ||
                                        '/test?q=absolute_url&status=308',
                                         method => 'POST',
                                         body => 'test'
                                )
                             )
      )
      select response.status,
             (select json_agg(json_build_object(h.name, h.value))
              from
                  unnest(response.headers) h
              where
                  h.name not in ('server', 'content-length', 'connection')) as headers,
             convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 200
        headers:
          - content-type: application/json
        body:
          method: POST
          path: /test
          qs: q=destination
          headers: null
          body: "test"

  - name: POST requests should be converted to GET for HTTP 301/302 redirects with the body omitted
    query: |
      with response as (select *
                        from omni_httpc.http_execute_with_options(
                                omni_httpc.http_execute_options(follow_redirects => true),
                                omni_httpc.http_request(
                                        'http://127.0.0.1:' ||
                                        (select effective_port from omni_httpd.listeners) ||
                                        '/test?q=absolute_url&status=302',
                                        method => 'POST',
                                        body => 'test'
                                )
                             )
      )
      select response.status,
             (select json_agg(json_build_object(h.name, h.value))
              from
                  unnest(response.headers) h
              where
                  h.name not in ('server', 'content-length', 'connection')) as headers,
             convert_from(response.body, 'utf-8')::json as body
      from response
    results:
      - status: 200
        headers:
          - content-type: application/json
        body:
          method: GET
          path: /test
          qs: q=destination
          headers: null
          body: ""


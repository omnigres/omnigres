$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  init:
  - create extension omni_polyfill
  - alter role yregress set search_path to omni_polyfill, pg_catalog, '$user', public
  - set search_path to omni_polyfill, pg_catalog, '$user', public

tests:

- name: version
  query: select uuid_extract_version(uuidv7()) as version
  results:
  - version: 7

- name: smoke test
  steps:
  - query: |
      create table test as
      select uuidv7() uuid, i
      from generate_series(1, 100000) i
  - query: |
      create table test_non_seq as
      select gen_random_uuid() uuid, i
      from generate_series(1, 100000) i
  - query: select distinct row_number() over (order by uuid) != i as res
           from test
    results:
    - res: false
  # Whereas in non-sequential UUIDs, this no longer holds
  - query: with query as (select distinct row_number() over (order by uuid) != i as res
           from test_non_seq
                          order by res)
           select true as res
           from query
           where res = true
    results:
    - res: true

- name: extract timestamp
  query: |
    select uuid_extract_timestamp(uuidv7()) is not null as result
  results:
  - result: true

- name: extract timestamp (null)
  query: |
      select uuid_extract_timestamp(null) is null as result
  results:
  - result: true

- name: extract timestamp
  query: |
    select uuid_extract_timestamp(uuidv7_interval(interval '1 minute')) >
           uuid_extract_timestamp(uuidv7()) as result
  results:
  - result: true

- name: interval
  query: select uuidv7_interval(interval '1 minute') is not null as result
  results:
  - result: true

- name: extract version
  query: |
    select uuid_extract_version(uuidv7()) as version
  results:
  - version: 7

- name: extract version
  query: |
    select uuid_extract_version(null) as version
  results:
  - version: null

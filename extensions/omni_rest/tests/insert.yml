$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  config:
    shared_preload_libraries: */env/OMNI_SO
    max_worker_processes: 64
  init:
  - set session omni_httpd.init_port = 0
  - create extension omni_httpd cascade
  - create extension omni_httpc cascade
  # FIXME: waiting for two reloads is working around a startup bug in omni_httpd
  - call omni_httpd.wait_for_configuration_reloads(2)
  - create extension omni_rest cascade
  - create schema app
  - create schema app1
  - |
    create
        or
        replace procedure omni_httpd.handler(int, omni_httpd.http_request, out omni_httpd.http_outcome)
        language plpgsql
    as
    $$
    declare
        req omni_httpd.http_request;
        resp omni_httpd.http_outcome;
    begin
        req := $2;
        call omni_rest.postgrest(req, resp, omni_rest.postgrest_settings(schemas => '{app,app1}'));
        if resp is not distinct from null then
            resp := omni_httpd.http_response(status => 404);
        end if;
        $3 := resp;
    end;
    $$
  - |
    create table app.users
    (
        id           serial primary key,
        name         text,
        email        text,
        profile_info jsonb
    )
  - |
    create table app1.users
    (
        id       serial primary key,
        username text
    )
  - |
    create function make_request(path text, headers omni_http.http_headers default array []::omni_http.http_headers,
                                 method omni_http.http_method default 'GET',
                                 body bytea default null) returns setof omni_httpc.http_response
        language sql as
    $$
    select *
    from omni_httpc.http_execute(
            omni_httpc.http_request('http://127.0.0.1:' ||
                                    (select effective_port from omni_httpd.listeners) ||
                                    path, method => method, headers => headers, body => body))
    $$

tests:

- name: simple JSON insert
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [omni_http.http_header('content-type', 'application/json')],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('id', nextval('app.users_id_seq'), 'name',
                                                                         'John Doe',
                                                                         'email',
                                                                         'john@doe.com',
                                                                         'profile_info',
                                                                         jsonb_build_object('bio',
                                                                                            'Software industry veteran',
                                                                                            'tags',
                                                                                            jsonb_build_array('ci', 'postgres')))::text,
                                                      'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select name, email, profile_info
           from app.users
    results:
    - name: John Doe
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - name: cleanup
    query: delete
           from app.users

- name: simple JSON insert (use of defaults)
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('prefer', 'missing=default')
                                                  ],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('name', 'John Doe',
                                                                         'email', 'john@doe.com',
                                                                         'profile_info',
                                                                         jsonb_build_object('bio',
                                                                                            'Software industry veteran',
                                                                                            'tags',
                                                                                            jsonb_build_array('ci', 'postgres')))::text,
                                                      'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select name, email, profile_info
           from app.users
    results:
    - name: John Doe
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - name: cleanup
    query: delete
           from app.users

- name: bulk JSON insert
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [omni_http.http_header('content-type', 'application/json')],
                                          body =>
                                              convert_to(
                                                      (select jsonb_agg(
                                                                      jsonb_build_object('id',
                                                                                         nextval('app.users_id_seq'),
                                                                                         'name',
                                                                                         'John Doe ' || i,
                                                                                         'email',
                                                                                         'john@doe.com',
                                                                                         'profile_info',
                                                                                         jsonb_build_object('bio',
                                                                                                            'Software industry veteran',
                                                                                                            'tags',
                                                                                                            jsonb_build_array('ci', 'postgres'))))
                                                       
                                                       from generate_series(1, 2) i)::text, 'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select name, email, profile_info
           from app.users
    results:
    - name: John Doe 1
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
    - name: John Doe 2
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - name: cleanup
    query: delete
           from app.users

- name: bulk JSON insert (use of defaults)
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('prefer', 'missing=default')
                                                  ],
                                          body =>
                                              convert_to(
                                                      (select jsonb_agg(
                                                                      jsonb_build_object('name',
                                                                                         'John Doe ' || i,
                                                                                         'email',
                                                                                         'john@doe.com',
                                                                                         'profile_info',
                                                                                         jsonb_build_object('bio',
                                                                                                            'Software industry veteran',
                                                                                                            'tags',
                                                                                                            jsonb_build_array('ci', 'postgres'))))
                                                       
                                                       from generate_series(1, 2) i)::text, 'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select name, email, profile_info
           from app.users
    results:
    - name: John Doe 1
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
    - name: John Doe 2
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - name: cleanup
    query: delete
           from app.users


- name: return representation
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('prefer', 'return=representation')
                                                  ],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('id', nextval('app.users_id_seq'), 'name',
                                                                         'John Doe',
                                                                         'email',
                                                                         'john@doe.com',
                                                                         'profile_info',
                                                                         jsonb_build_object('bio',
                                                                                            'Software industry veteran',
                                                                                            'tags',
                                                                                            jsonb_build_array('ci', 'postgres')))::text,
                                                      'utf8')))
      select response.status, rec.name, rec.email, rec.profile_info
      from response,
           lateral jsonb_populate_recordset(null::app.users, convert_from(response.body, 'utf8')::jsonb) rec
    results:
    - status: 201
      name: John Doe
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - query: select name, email, profile_info
           from app.users
    results:
    - name: John Doe
      email: john@doe.com
      profile_info:
        bio: Software industry veteran
        tags: [ ci, postgres ]
  - name: cleanup
    query: delete
           from app.users

- name: tx-end rollback
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('prefer', 'tx=rollback')],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('id', nextval('app.users_id_seq'), 'name',
                                                                         'John Doe',
                                                                         'email',
                                                                         'john@doe.com',
                                                                         'profile_info',
                                                                         jsonb_build_object('bio',
                                                                                            'Software industry veteran',
                                                                                            'tags',
                                                                                            jsonb_build_array('ci', 'postgres')))::text,
                                                      'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select name, email, profile_info
           from app.users
    results: [ ]

- name: JSON insert into a different schema (using headers)
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('content-profile', 'app1')
                                                  ],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('id', nextval('app1.users_id_seq'), 'username',
                                                                         'John Doe')::text,
                                                      'utf8')))
      select response.status
      from response
    results:
    - status: 201
  - query: select username
           from app1.users
    results:
    - username: John Doe
  - name: cleanup
    query: delete
           from app1.users

- name: JSON insert into an invalid schema (using headers)
  transaction: false
  steps:
  - query: |
      with response as (select *
                        from make_request('/users', method => 'POST',
                                          headers =>
                                              array [
                                                  omni_http.http_header('content-type', 'application/json'),
                                                  omni_http.http_header('content-profile', 'public')
                                                  ],
                                          body =>
                                              convert_to(
                                                      jsonb_build_object('id', nextval('app1.users_id_seq'), 'username',
                                                                         'John Doe')::text,
                                                      'utf8')))
      select response.status
      from response
    results:
    - status: 404
  - query: select username
           from app1.users
    results: [ ]

name: Debug

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository'
        required: true
        default: 'omnigres/omnigres'
      ref:
        description: 'Ref (commit, branch, tag)'
        required: true
        default: 'master'
      os:
        description: 'OS'
        required: true
        type: choice
        options:
        - warp-ubuntu-2404-x64-4x
        - warp-ubuntu-latest-x64-4x
        - warp-macos-14-arm64-6x
        - warp-ubuntu-2404-arm64-2x
        - warp-ubuntu-latest-arm64-2x
        - warp-ubuntu-latest-arm64-4x
        - ubuntu-latest
        - macos-13
        default: warp-ubuntu-2404-x64-4x
      build:
        description: 'Build Omnigres?'
        required: true
        type: boolean
        default: true
      pgver:
        description: 'Postgres version'
        required: true
        default: '17'
      build_type:
        description: 'Build type'
        required: true
        default: 'Debug'

jobs:
  debug:
    runs-on: ${{ github.event.inputs.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repo }}
        ref: ${{ github.event.inputs.ref }}

    - name: Install OpenSSL
      if: github.event.inputs.os == 'macos-13'
      env:
        HOMEBREW_NO_AUTO_UPDATE: "1"
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: "1"
        HOMEBREW_NO_INSTALL_CLEANUP: "1"
      run: |
        brew update
        brew install openssl@3

    - name: Install recent curl on Linux
      if: github.event.inputs.os == 'ubuntu-latest'
      run: |
        wget --retry-on-http-error=42 --retry-connrefused -c https://github.com/moparisthebest/static-curl/releases/download/v7.87.0/curl-amd64
        chmod +x curl-amd64
        mv curl-amd64 curl

    - name: Setup Docker on macOS using Colima, Lima-VM, and Homebrew.
      uses: douglascamata/setup-docker-macos-action@v1-alpha
      if: github.event.inputs.os == 'macos-13' # No need to check on Linux, it's there

    - name: Configure Docker host on macOS
      if: github.event.inputs.os == 'macos-13'
      run: |
        echo "DOCKER_HOST=$(docker context inspect -f '{{ .Endpoints.docker.Host }}')" >> $GITHUB_ENV
        echo "DOCKER_HOST_IP=192.168.5.2" >> $GITHUB_ENV

    - uses: actions/cache@v3
      with:
        path: .pg
        key: ${{ github.event.inputs.os }}-pg-${{ github.event.inputs.pgver }}-${{ hashFiles('cmake/FindPostgreSQL.cmake') }}

    - name: Configure
      if: github.event.inputs.build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{github.event.inputs.build_type}} -DPGVER=${{ github.event.inputs.pgver }}

    - name: Build
      if: github.event.inputs.build
      run: cmake --build ${{github.workspace}}/build --parallel --config ${{github.event.inputs.build_type}}

    - name: Setup debug session
      uses: Warpbuilds/action-debugger@v1.3
      with:
        limit-access-to-actor: true

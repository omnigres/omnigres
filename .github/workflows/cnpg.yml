name: CloudnativePG

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-cnpg

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ amd64, arm64 ]
        pg: [ 17.6 ]

    if: |
      github.repository == 'omnigres/omnigres' && (
        github.event_name != 'pull_request' ||
        github.event.pull_request.head.repo.full_name == 'omnigres/omnigres'
      )
    runs-on: ${{ fromJSON('["blacksmith-4vcpu-ubuntu-2404", "blacksmith-16vcpu-ubuntu-2404-arm"]')[matrix.platform == 'arm64'] }}

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Docker buildx
      uses: useblacksmith/setup-docker-builder@v1
      with:
        driver-opts: network=host

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log into Docker Hub for increased limits
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Check if Omnigres base exists
      id: check_base
      run: |
        if docker manifest inspect  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.pg_version }} > /dev/null 2>&1; then
          echo "base_type=omnigres" >> $GITHUB_OUTPUT
          echo "base_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.pg_version }}" >> $GITHUB_OUTPUT
        else
          echo "base_type=cnpg" >> $GITHUB_OUTPUT  
          echo "base_image=ghcr.io/cloudnative-pg/postgresql:${{ matrix.pg_version }}-standard-bookworm" >> $GITHUB_OUTPUT
        fi

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: useblacksmith/build-push-action@v2
      with:
        context: cnpg
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}-${{ matrix.platform }}
        provenance: false
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BASE_IMAGE=${{ steps.check_base.outputs.base_image }}
          BUILD_PARALLEL_LEVEL=4
          OMNIGRES_REV=${{ github.event.pull_request.head.sha || github.sha }}
          PG_VERSION=${{ matrix.pg }}
        platforms: linux/${{ matrix.platform }}

  manifest:
    strategy:
      matrix:
        pg: [ 17.6 ]

    if: github.event_name != 'pull_request' && github.repository == 'omnigres/omnigres'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.pg }}

    - name: Create and push manifest images (rev)
      uses: Noelware/docker-manifest-action@v1
      with:
        tags:
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}
        inputs: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}-amd64,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}-arm64
        push: true

    - name: Create and push manifest images (latest)
      uses: Noelware/docker-manifest-action@v1
      with:
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}
        inputs: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}-amd64,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.pg }}-${{ github.sha }}-arm64

        push: true
